<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical" 
   
    >

    <TextView
        android:id="@+id/textView1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="left"
        android:text="@string/heading1"
        android:textAppearance="?android:attr/textAppearanceLarge" />

<ImageView
    android:id="@+id/imageView1"
    android:layout_width="match_parent"
    android:layout_height="252dp"
    
    android:scaleType="fitStart"
    android:src="@drawable/s21" />



    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content" >
        <ScrollView
    android:id="@+id/scrollView1"
    android:layout_width="match_parent"
    android:layout_height="128dp" >
         <TextView
             android:id="@+id/textView2"
             android:layout_width="match_parent"
             android:layout_height="128dp"
             android:text="A stack is a particular kind of abstract data type or collection in which the principal (or only) operations on the collection are the addition of an entity to the collection, known as push and removal of an entity, known as pop. 

The stack is a Last-In-First-Out (LIFO) data structure. In a LIFO data structure, the last element added to the structure must be the first one to be removed. 

This is equivalent to the requirement that, considered as a linear data structure, or more abstractly a sequential collection, the push and pop operations occur only at one end of the structure, referred to as the top of the stack. 

A stack is a restricted data structure, because only a small number of operations are performed on it. The nature of the pop and push operations also means that stack elements have a natural order. 

Elements are removed from the stack in the reverse order to the order of their addition. Therefore, the lower elements are those that have been on the stack the longest." />
 </ScrollView>
    </LinearLayout>


<LinearLayout 
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="horizontal">
    
<Button
    android:id="@+id/button1"
    android:layout_width="160dp"
    android:layout_height="wrap_content"
    android:text="@string/illustration" />

<Button
    android:id="@+id/button2"
    android:layout_width="160dp"
    android:layout_height="wrap_content"
    android:layout_marginLeft="0dp"
    android:text="@string/operation" />

 </LinearLayout>
</LinearLayout>